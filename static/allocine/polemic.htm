<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html dir="ltr" xml:lang="fr" xmlns="http://www.w3.org/1999/xhtml" lang="fr">

<head>
<title>Metadataplayer - Polemic tweet integration test</title>
</head>

<body>

  <div style="width:650px;font-family: 'Trebuchet MS', 'Helvetica', 'Arial',  'Verdana', 'sans-serif';">
  <h1>MetaDataPlayer</h1>
  
  </div>
  
  <script type="text/javascript" src="LdtPlayer-release.js" type="text/javascript"></script>   
  <script type="text/javascript" src="LdtPlayer-allocine.js" type="text/javascript"></script>   
  
  <div id="LdtPlayer"></div>
  
  <script  type="text/javascript">
  
    /* configuration des chemins des ressources */
    IriSP.lib = {
        jQuery:"libs/jquery.min.js",
        jQueryUI:"libs/jquery-ui.min.js",        
        swfObject:"libs/swfobject.js",                        
        jwplayer:"libs/jwplayer.js",
        raphael:"libs/raphael.js"
    };
    
    IriSP.paths = {
      "imgs": "css/imgs"
    };
    
    IriSP.default_templates_vars = {
      "img_dir" : IriSP.paths.imgs 
    };
    
    IriSP.jwplayer_swf_path = "libs/player.swf";
    
    var file = "polemic_fr.json";
    
    /* La configuration du metadataplayer est decoupée en trois parties */
    var config = {
        /* la partie gui décrit tout les élements graphiques */
      gui:{
            width:650,            
            container:'LdtPlayer',
            css:'css/LdtPlayer.css',
            /* liste des widgets à instancier - ne concerne pas allocine */
            widgets: [
            {
                type: "StackGraphWidget",
                metadata: {
                    format:'cinelab',
                    src:file,
                    type:'json'
                },requires: [{
                  type: "TooltipWidget",
                  width: 180,
                  heigh: 160,
                  metadata : {
                    type:'empty'
                  }
                  }]
            },            
            {type: "SliderWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            },
            {type: "PlayerWidget",
             mode: "radio",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            },
            {type: "SegmentsWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'},
             requires: [{
              type: "TooltipWidget",
              width: 180,
              heigh: 160,
              metadata : {
                type:'empty'
              }
             }],
            },            
            {type: "SliceWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            },            
            {type: "ArrowWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            },


            {type: "AnnotationsWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            },
            {type: "TweetsWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            },
            {type: "createAnnotationWidget",
             metadata:{
              format:'cinelab',
              src:file,
              type:'json'}
            }      
            ]
        },
      /* la partie player contient la configuration de la lecture vidéo. 
         tous les champs qu'elle contient sont passés tels quels à l'objet
         player.
      */
      player:{
        type:'jwplayer', // type du player, à changer en "allocine" pour activer le player allociné
        /* NB : vous pouvez passer les paramètres que vous voulez à cette structure,
           ils seront passés à l'objet du player.
        */
        live: true, 
        height: 300, 
        width: 640, 
        provider: "rtmp",
        file: "video/ldtplatform/museologie_inaugurale_20111018_flat.f4v",
        //file: "video/enmi/enmi_03_20111219_flat.f4v",
        streamer: "rtmp://media.iri.centrepompidou.fr/ddc_player/"
      },
      /* modules à créer, pour le support mediafragment par ex... */
      modules: [
               { type: "MediaFragment",
                  metadata:{
                  format:'cinelab',
                  src:file,
                  type:'json'}
                }]

    };
    
    IriSP.initPlayer(config, "polemic_fr.json");
    </script>
  

    <script src="../src/jquery.js"></script>
    <script src="../src/tracemanager.js"></script>
	<script  type="text/javascript">
	
	var  obselProbe = function(element, bindingEvent, ObselFunction) {
			console.log("!!!!!!!!- ICI -!!!!!!!!!")
			console.log(element)
			console.log(bindingEvent)
			console.log(ObselFunction)

			var opiID = self.setInterval( function() { ObselProbeInterval(element,bindingEvent,ObselFunction,opiID)},1000);
	}
	var ObselProbeInterval = function(element, bindingEvent, ObselFunction,opiID){
	 	console.log("!!!!!!!!- ObselProbeInterval -!!!!!!!!!")
	 	//console.log($(element).length)
	 	
	 	if($(element).length!=0){
	 		//$(element).bind(bindingEvent, ObselFunction );
	 		window.clearInterval(opiID);
			console.log("!!!!!!!!- EXISTE -!!!!!!!!!")
	 	}else{	
			console.log("!!!!!!!!- EXISTE PAS -!!!!!!!!!")
		}
	 }
	
		/* Trail System */
		$(window).load(function() {
		                   console.log("Starting test")
		                   tr = window.tracemanager.init_trace("test");
		                   tr.set_sync_mode('delayed');
		                   tr.set_default_subject("shuron");
		                   tr.trace("StartTracing", { foo: "bar" });
		                   for (var i = 0; i < 10; i++) {
		                       tr.trace("Iteration", { index: i });
		                   }
		                   console.log(tr.list_obsels());
						
						   obselProbe('.Ldt-CtrlPlay','mouseout', function () { tr.trace('MouseOut', {widget: this.id}) });
						
							
						/*
		                   $('.Ldt-CtrlPlay').bind('mouseover', function () { tr.trace('MouseOver', {widget: this.id}) } )
		                       .bind('mouseout', function () { tr.trace('MouseOut', {widget: this.id}) } )
		                       .bind('click', function () { tr.trace('Click', {widget: this.id}) } );
							
							//
							$('.Ldt-CtrlPlay').bind('mouseover', function () {
								console.log("TEST !!!!!!");
							});
						*/
		               });
		
		
  	</script>

 </body>
 </html>
